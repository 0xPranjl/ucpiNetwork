make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Sat Jul 23 14:30:32 2022

# Variables

# makefile (from 'Makefile', line 89)
build_tags := netgo ledger sw
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
GP_OPEN_EDITOR = /ide-desktop/bin/idea-cli open
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 121)
LD_FLAGS := -X github.com/cosmos/cosmos-sdk/version.Name=SecretNetwork -X github.com/cosmos/cosmos-sdk/version.AppName=secretd -X github.com/enigmampc/SecretNetwork/cmd/secretcli/version.ClientName=secretcli -X github.com/cosmos/cosmos-sdk/version.Version=1.3.1-282-g0d3dd002 -X github.com/cosmos/cosmos-sdk/version.Commit=0d3dd002d655baed72364862f32342d93a736d14 -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo ledger sw" -s -w
# makefile (from 'Makefile', line 6)
DOCKER_BUF :=  run --rm -v /workspace/SecretNetwork:/workspace --workdir /workspace bufbuild/buf
# environment
VSX_REGISTRY_URL = https://open-vsx.gitpod.io
# makefile (from 'Makefile', line 11)
DEB_BIN_DIR = /usr/local/bin
# environment
SUPERVISOR_ADDR = localhost:22999
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /workspace/SecretNetwork
# makefile (from 'Makefile', line 19)
DOCKER_TAG = latest
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# makefile (from 'Makefile', line 92)
whitespace := $(subst ,, )
# environment
_ = /ide/node
# environment
GITPOD_THEIA_PORT = 23000
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
GITPOD_ANALYTICS_WRITER = segment
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from 'Makefile', line 58)
GCC = $(shell command -v gcc 2> /dev/null)
# environment
GO111MODULE = auto
# environment
GITPOD_WORKSPACE_CONTEXT_URL = https://github.com/scrtlabs/SecretNetwork/pull/1023
# 'override' directive
GNUMAKEFLAGS := 
# environment
MAKELEVEL := 0
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from 'Makefile', line 2)
VERSION = $(shell echo $(shell git describe --tags) | sed 's/^v//')
# environment
THEIA_WORKSPACE_ROOT = /workspace/SecretNetwork
# makefile (from 'Makefile', line 117)
ldflags := -X github.com/cosmos/cosmos-sdk/version.Name=SecretNetwork -X github.com/cosmos/cosmos-sdk/version.AppName=secretd -X github.com/enigmampc/SecretNetwork/cmd/secretcli/version.ClientName=secretcli -X github.com/cosmos/cosmos-sdk/version.Version=1.3.1-282-g0d3dd002 -X github.com/cosmos/cosmos-sdk/version.Commit=0d3dd002d655baed72364862f32342d93a736d14 -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo ledger sw" -s -w
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
GIT_EDITOR = /ide-desktop/bin/idea-cli open --wait
# environment
VSCODE_CWD = /ide
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
SGX_SDK = /opt/sgxsdk
# makefile (from 'Makefile', line 24)
ext := sw
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/go/bin:/ide/bin/remote-cli:/ide-desktop/bin:/ide/bin/remote-cli:/usr/local/cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/go//bin:/home/gitpod/.local/bin:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64
# environment
GITPOD_OWNER_ID = 684c6ed3-c267-40b9-88d9-939c65acfbb8
# environment
GITPOD_WORKSPACE_ID = scrtlabs-secretnetwork-cm5byovbwwr
# makefile (from 'Makefile', line 42)
CUR_DIR := /workspace/SecretNetwork
# environment
GITPOD_INTERVAL = 30000
# environment
CARGO_HOME = /usr/local/cargo
# environment
GITPOD_WORKSPACE_CLUSTER_HOST = ws-us54.gitpod.io
# environment
GITPOD_ANALYTICS_SEGMENT_KEY = bUY8IRdJ42KjLOBS9LoIHMYFBD8rSzjU
# environment
GITPOD_REPO_ROOTS = /workspace/SecretNetwork
# makefile (from 'Makefile', line 18)
DEBUG = 0
# makefile (from 'Makefile', line 93)
comma := ,
# makefile (from 'Makefile', line 5)
DOCKER := 
# environment
GOPATH = /go/
# makefile (from 'Makefile', line 8)
LEDGER_ENABLED = true
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-828d3541-dc25-47ee-abc3-cc1b2da864bc.sock
# makefile (from 'Makefile', line 3)
COMMIT := 0d3dd002d655baed72364862f32342d93a736d14
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 473)
protoVer = v0.2
# environment
LS_COLORS = 
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile', line 54)
UNAME_S = $(shell uname -s)
# environment
GP_PREVIEW_BROWSER = /ide-desktop/bin/idea-cli preview
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 94)
build_tags_comma_sep := netgo,ledger,sw
# environment
VISUAL = /ide-desktop/bin/idea-cli open
# makefile (from 'Makefile', line 119)
GO_TAGS := netgo ledger sw
# environment
WORKSPACEKIT_WRAP_NETNS = true
# default
.LOADED := 
# environment
PKG_CONFIG_PATH = :/opt/sgxsdk/pkgconfig:/opt/sgxsdk/pkgconfig
# environment
RUSTUP_HOME = /usr/local/rustup
# environment
GOMODCACHE = /go/pkg/mod
# environment
HOME = /home/gitpod
# environment
LD_LIBRARY_PATH = /opt/sgxsdk/sdk_libs:/opt/sgxsdk/sdk_libs
# environment
THEIA_WEBVIEW_EXTERNAL_ENDPOINT = webview-{{hostname}}
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
rustArch = x86_64-unknown-linux-gnu
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
GITPOD_CLI_APITOKEN = pXV6CQ7s8aTpk9llV6JpfkP4woUKTtNT
# automatic
+F = $(notdir $+)
# environment
SCRT_ENCLAVE_DIR = /home/vscode/SecretNetwork/go-cosmwasm/
# makefile (from 'Makefile', line 12)
DEB_LIB_DIR = /usr/lib
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
HOSTNAME = scrtlabs-secretnetwork-cm5byovbwwr
# environment
SGX_MODE = SW
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# makefile (from 'Makefile', line 9)
BINDIR = $(GOPATH)/bin
# environment
GITPOD_GIT_USER_NAME = faddat
# default
MAKE_VERSION := 4.2.1
# environment
USER = gitpod
# makefile
.DEFAULT_GOAL := all
# environment
GOROOT = /usr/local/go
# environment
rustupSha256 = 3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338
# environment
RUST_VERSION = 1.62.0
# environment
GITPOD_IDE_ALIAS = goland
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
GITPOD_REPO_ROOT = /workspace/SecretNetwork
# environment
THEIA_RATELIMIT_LOG = 50
# environment
THEIA_MINI_BROWSER_HOST_PATTERN = browser-{{hostname}}
# environment
GITPOD_GIT_USER_EMAIL = jacobgadikian@gmail.com
# environment
dpkgArch = amd64
# default
MAKE_COMMAND := make
# environment
OLDPWD = /
# default
.VARIABLES := 
# environment
GITPOD_WORKSPACE_CLASS = default
# makefile (from 'Makefile', line 37)
DOCKER_CGO_LDFLAGS = ""
# environment
GITPOD_PREVENT_METADATA_ACCESS = true
# environment
GITPOD_HOST = https://gitpod.io
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 4)
CURRENT_BRANCH := cosmwasm-v1-lint
# environment
USER_HOME = /home/vscode
# environment
BROWSER = /ide/bin/helpers/browser.sh
# environment
GITPOD_MEMORY = 3435
# makefile (from 'Makefile', line 1)
PACKAGES = $(shell go list ./... | grep -v '/simulation')
# environment
VSCODE_HANDLES_SIGPIPE = true
# environment
GITPOD_TASKS = [{"name":"set up permissions","command":"sudo chown gitpod:gitpod /go -R\nsudo chown gitpod:gitpod /usr/local/cargo -R\nexport SCRT_ENCLAVE_DIR=/workspace/SecretNetwork/go-cosmwasm/\n"},{"name":"install tools","command":"go install golang.org/x/tools/cmd/goimports@latest go install mvdan.cc/gofumpt@latest go install src.techknowlogick.com/xgo@latest"}]
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# environment
GITPOD_CODE_HOST = https://gitpod.io
# automatic
<F = $(notdir $<)
# environment
GP_EXTERNAL_BROWSER = /ide-desktop/bin/idea-cli preview
# makefile (from 'Makefile', line 68)
IAS_BUILD = sw
# makefile (from 'Makefile', line 17)
BRANCH = develop
# environment
EDITOR = /ide-desktop/bin/idea-cli open
# environment
PWD = /workspace/SecretNetwork
# environment
LC_ALL = C
# environment
GITPOD_WORKSPACE_CONTEXT = {"title":"Cosmwasm v1 lint","repository":{"cloneUrl":"https://github.com/scrtlabs/SecretNetwork.git","host":"github.com","name":"SecretNetwork","owner":"scrtlabs","private":false},"ref":"cosmwasm-v1-lint","refType":"branch","revision":"0d3dd002d655baed72364862f32342d93a736d14","nr":1023,"base":{"repository":{"cloneUrl":"https://github.com/scrtlabs/SecretNetwork.git","host":"github.com","name":"SecretNetwork","owner":"scrtlabs","private":false},"ref":"cosmwasm-v1","refType":"branch"},"normalizedContextURL":"https://github.com/scrtlabs/SecretNetwork/pull/1023","checkoutLocation":"SecretNetwork"}
# environment
SUPERVISOR_DOTFILE_REPO = https://github.com/faddat/dotfiles
# environment
JAVA_TOOL_OPTIONS =  -Xmx3435m
# automatic
^F = $(notdir $^)
# environment
JETBRAINS_BACKEND_QUALIFIER = latest
# default
SUFFIXES := 
# makefile (from 'Makefile', line 36)
DB_BACKEND = goleveldb
# makefile (from 'Makefile', line 10)
BUILD_PROFILE = release
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GITPOD_INSTANCE_ID = a5c46375-cf14-49c7-9d8d-755074b80a85
# environment
GITPOD_WORKSPACE_URL = https://scrtlabs-secretnetwork-cm5byovbwwr.ws-us54.gitpod.io
# default
.RECIPEPREFIX := 
# environment
LANG = C
# variable set hash-table stats:
# Load=143/1024=14%, Rehash=0, Collisions=35/265=13%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2346, inode 1073742151): 36 files, no impossibilities.

# 36 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

 
build_linux_arm64_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 167):
	$(MAKE) xgo_build_secretcli XGO_TARGET=linux/arm64
	mv secretd-linux-arm64 secretcli-linux-arm64

proto-lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 485):
	@$(DOCKER_BUF) lint --error-format=json

build-linux: _build-linux build_local_no_rust build_cli
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

go.sum: go.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 129):
	@echo "--> Ensure dependencies have not been modified"
	GO111MODULE=on go mod verify

build_local_no_rust: bin-data-sw
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 139):
	cp go-cosmwasm/target/$(BUILD_PROFILE)/libgo_cosmwasm.so go-cosmwasm/api
	go build -mod=readonly -tags "$(GO_TAGS)" -ldflags '$(LD_FLAGS)' ./cmd/secretd

build-mainnet: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 251):
	@mkdir build 2>&3 || true
	docker build --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=BOOTSTRAP -f deployment/dockerfiles/release.Dockerfile -t enigmampc/secret-network-bootstrap:v$(VERSION)-mainnet .
	docker build --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=NODE -f deployment/dockerfiles/release.Dockerfile -t enigmampc/secret-network-node:v$(VERSION)-mainnet .
	docker build --build-arg BUILD_VERSION=${VERSION} --build-arg SGX_MODE=HW -f deployment/dockerfiles/build-deb.Dockerfile -t deb_build .
	docker run -e VERSION=${VERSION} -v $(CUR_DIR)/build:/build deb_build

build_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 133):
	go build -o secretcli -mod=readonly -tags "$(GO_TAGS) secretcli" -ldflags '$(LD_FLAGS)' ./cmd/secretd

all: build_all
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

check-enclave:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 320):
	$(MAKE) -C cosmwasm/enclaves/execute check

proto-gen:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 478):
	@echo "Generating Protobuf files"
	$(DOCKER) run --rm -v $(CURDIR):/workspace --workdir /workspace tendermintdev/sdk-proto-gen:$(protoVer) sh ./scripts/protocgen.sh

.PHONY: enclave-tests update-swagger-openapi-docs statik proto-all proto-gen proto-swagger-openapi-gen proto-format proto-lint proto-check-breaking
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

sanity-test-hw:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 336):
	$(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so .
	./cosmwasm/testing/sanity-test.sh

update-swagger-openapi-docs: statik proto-swagger-openapi-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 448):
	statik -src=client/docs/static/ -dest=client/docs -f -m
	@if [ -n "$(git status --porcelain)" ]; then \
        echo "\033[91mSwagger docs are out of sync!!!\033[0m";\
        exit 1;\
    else \
        echo "\033[92mSwagger docs are in sync\033[0m";\
    fi

build_macos_arm64_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 159):
	$(MAKE) xgo_build_secretcli XGO_TARGET=darwin/arm64
	mv secretd-darwin-* secretcli-macos-arm64

build-localsecret:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 223):
	docker build --build-arg BUILD_VERSION=${VERSION} --build-arg SGX_MODE=SW --build-arg FEATURES_U="${FEATURES_U}" --build-arg FEATURES="${FEATURES},debug-print" -f deployment/dockerfiles/base.Dockerfile -t rust-go-base-image .
	docker build --build-arg SGX_MODE=SW --build-arg SECRET_NODE_TYPE=BOOTSTRAP --build-arg CHAIN_ID=secretdev-1 -f deployment/dockerfiles/release.Dockerfile -t build-release .
	docker build --build-arg SGX_MODE=SW --build-arg SECRET_NODE_TYPE=BOOTSTRAP --build-arg CHAIN_ID=secretdev-1 -f deployment/dockerfiles/dev-image.Dockerfile -t ghcr.io/scrtlabs/localsecret:${DOCKER_TAG} .

go-tests-hw: build-test-contract
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 367):
	# empty BUILD_PROFILE means debug mode which compiles faster
	SGX_MODE=HW $(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so ./x/compute/internal/keeper
	rm -rf ./x/compute/internal/keeper/.sgx_secrets
	mkdir -p ./x/compute/internal/keeper/.sgx_secrets
	GOMAXPROCS=8 SGX_MODE=HW go test -v ./x/compute/internal/... $(GO_TEST_ARGS)

docker_enclave_test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 312):
	docker build --build-arg FEATURES="test ${FEATURES}" --build-arg SGX_MODE=${SGX_MODE} -f deployment/dockerfiles/enclave-test.Dockerfile -t rust-enclave-test .

go-tests: build-test-contract
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 359):
	# empty BUILD_PROFILE means debug mode which compiles faster
	SGX_MODE=SW $(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so ./x/compute/internal/keeper
	rm -rf ./x/compute/internal/keeper/.sgx_secrets
	mkdir -p ./x/compute/internal/keeper/.sgx_secrets
	GOMAXPROCS=8 SGX_MODE=SW SCRT_SGX_STORAGE='./' go test -failfast -timeout 1200s -v ./x/compute/internal/... $(GO_TEST_ARGS)

proto-format:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

docker_base_rust:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 270):
	docker build \
				--build-arg BUILD_VERSION=${VERSION} \
				--build-arg FEATURES=${FEATURES} \
				--build-arg FEATURES_U=${FEATURES_U} \
				--build-arg SGX_MODE=${SGX_MODE} \
				-f deployment/dockerfiles/base-rust.Dockerfile \
				-t rust-base-image \
				.

# Not a target:
Makefile:
#  Implicit rule search has been done.
 
#  Last modified 2022-07-23 14:29:19.49876211
#  File has been updated.
#  Successfully updated.

xgo_build_secretcli: go.sum
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 136):
	@echo "--> WARNING! This builds from origin/$(CURRENT_BRANCH)!"
	xgo --targets $(XGO_TARGET) -tags="$(GO_TAGS) secretcli" -ldflags '$(LD_FLAGS)' --branch $(CURRENT_BRANCH) github.com/enigmampc/SecretNetwork/cmd/secretd

build-testnet: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 237):
	@mkdir build 2>&3 || true
	docker build --build-arg BUILD_VERSION=${VERSION} --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=BOOTSTRAP -f deployment/dockerfiles/release.Dockerfile -t enigmampc/secret-network-bootstrap:v$(VERSION)-testnet .
	docker build --build-arg BUILD_VERSION=${VERSION} --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=NODE -f deployment/dockerfiles/release.Dockerfile -t enigmampc/secret-network-node:v$(VERSION)-testnet .
	docker build --build-arg SGX_MODE=HW -f deployment/dockerfiles/build-deb.Dockerfile -t deb_build .
	docker run -e VERSION=${VERSION} -v $(CUR_DIR)/build:/build deb_build

docker_bootstrap: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 302):
	docker build --build-arg SGX_MODE=${SGX_MODE} --build-arg SECRET_NODE_TYPE=BOOTSTRAP -f deployment/dockerfiles/local-node.Dockerfile -t enigmampc/secret-network-bootstrap-${ext}:${DOCKER_TAG} .

build-all-test-contracts: build-test-contract
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 382):
	# echo "" | sudo add-apt-repository ppa:hnakamur/binaryen
	# sudo apt update
	# sudo apt install -y binaryen
	cd ./cosmwasm/v010-contracts/gov && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/gov/target/wasm32-unknown-unknown/release/gov.wasm -o ./x/compute/internal/keeper/testdata/gov.wasm
	cd ./cosmwasm/v010-contracts/dist && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/dist/target/wasm32-unknown-unknown/release/dist.wasm -o ./x/compute/internal/keeper/testdata/dist.wasm
	cd ./cosmwasm/v010-contracts/mint && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/mint/target/wasm32-unknown-unknown/release/mint.wasm -o ./x/compute/internal/keeper/testdata/mint.wasm
	cd ./cosmwasm/v010-contracts/staking && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/staking/target/wasm32-unknown-unknown/release/staking.wasm -o ./x/compute/internal/keeper/testdata/staking.wasm
	cd ./cosmwasm/v010-contracts/reflect && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/reflect/target/wasm32-unknown-unknown/release/reflect.wasm -o ./x/compute/internal/keeper/testdata/reflect.wasm
	cd ./cosmwasm/v010-contracts/burner && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/burner/target/wasm32-unknown-unknown/release/burner.wasm -o ./x/compute/internal/keeper/testdata/burner.wasm
	cd ./cosmwasm/v010-contracts/erc20 && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/erc20/target/wasm32-unknown-unknown/release/cw_erc20.wasm -o ./x/compute/internal/keeper/testdata/erc20.wasm
	cd ./cosmwasm/v010-contracts/hackatom && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/hackatom/target/wasm32-unknown-unknown/release/hackatom.wasm -o ./x/compute/internal/keeper/testdata/contract.wasm
	cat ./x/compute/internal/keeper/testdata/contract.wasm | gzip > ./x/compute/internal/keeper/testdata/contract.wasm.gzip

build-test-contract:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 346):
	# echo "" | sudo add-apt-repository ppa:hnakamur/binaryen
	# sudo apt update
	# sudo apt install -y binaryen
	$(MAKE) -C ./x/compute/internal/keeper/testdata/test-contract
	$(MAKE) -C ./x/compute/internal/keeper/testdata/v1-sanity-contract

proto-all: proto-format proto-lint proto-gen proto-swagger-openapi-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-erc20-contract: build-test-contract
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 411):
	cd ./cosmwasm/v010-contracts/erc20 && RUSTFLAGS='-C link-arg=-s' cargo build --release --target wasm32-unknown-unknown --locked
	wasm-opt -Os ./cosmwasm/v010-contracts/erc20/target/wasm32-unknown-unknown/release/cw_erc20.wasm -o ./erc20.wasm

_build-linux: vendor
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%
#  recipe to execute (from 'Makefile', line 144):
	BUILD_PROFILE=$(BUILD_PROFILE) FEATURES=$(FEATURES) FEATURES_U=$(FEATURES_U) $(MAKE) -C go-cosmwasm build-rust

deb-no-compile:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 178):
	rm -rf /tmp/SecretNetwork
	mkdir -p /tmp/SecretNetwork/deb/$(DEB_BIN_DIR)
	cp -f ./secretcli /tmp/SecretNetwork/deb/$(DEB_BIN_DIR)/secretcli
	cp -f ./secretd /tmp/SecretNetwork/deb/$(DEB_BIN_DIR)/secretd
	chmod +x /tmp/SecretNetwork/deb/$(DEB_BIN_DIR)/secretd /tmp/SecretNetwork/deb/$(DEB_BIN_DIR)/secretcli
	mkdir -p /tmp/SecretNetwork/deb/$(DEB_LIB_DIR)
	cp -f ./go-cosmwasm/api/libgo_cosmwasm.so ./go-cosmwasm/librust_cosmwasm_enclave.signed.so ./go-cosmwasm/librust_cosmwasm_query_enclave.signed.so /tmp/SecretNetwork/deb/$(DEB_LIB_DIR)/
	chmod +x /tmp/SecretNetwork/deb/$(DEB_LIB_DIR)/lib*.so
	mkdir -p /tmp/SecretNetwork/deb/DEBIAN
	cp ./deployment/deb/control /tmp/SecretNetwork/deb/DEBIAN/control
	printf "Version: " >> /tmp/SecretNetwork/deb/DEBIAN/control
	printf "$(VERSION)" >> /tmp/SecretNetwork/deb/DEBIAN/control
	echo "" >> /tmp/SecretNetwork/deb/DEBIAN/control
	cp ./deployment/deb/postinst /tmp/SecretNetwork/deb/DEBIAN/postinst
	chmod 755 /tmp/SecretNetwork/deb/DEBIAN/postinst
	cp ./deployment/deb/postrm /tmp/SecretNetwork/deb/DEBIAN/postrm
 
	chmod 755 /tmp/SecretNetwork/deb/DEBIAN/postrm
	cp ./deployment/deb/triggers /tmp/SecretNetwork/deb/DEBIAN/triggers
	chmod 755 /tmp/SecretNetwork/deb/DEBIAN/triggers
	dpkg-deb --build /tmp/SecretNetwork/deb/ .
	-rm -rf /tmp/SecretNetwork

build-rocksdb-image:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 220):
	docker build --build-arg BUILD_VERSION=${VERSION} -f deployment/dockerfiles/db-compile.Dockerfile -t enigmampc/rocksdb:${VERSION} .

bin-data-sw:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 417):
	cd ./cmd/secretd && go-bindata -o ias_bin_sw.go -prefix "../../ias_keys/sw_dummy/" -tags "!hw" ../../ias_keys/sw_dummy/...

build-linux-with-query: _build-linux-with-query build_local_no_rust build_cli
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

docker_base_go:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 280):
	docker build \
				--build-arg DB_BACKEND=${DB_BACKEND} \
				--build-arg BUILD_VERSION=${VERSION} \
				--build-arg FEATURES=${FEATURES} \
				--build-arg FEATURES_U=${FEATURES_U} \
				--build-arg SGX_MODE=${SGX_MODE} \
				--build-arg CGO_LDFLAGS=${DOCKER_CGO_LDFLAGS} \
				-f deployment/dockerfiles/base-go.Dockerfile \
				-t rust-go-base-image \
				.

clippy-enclave:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 324):
	$(MAKE) -C cosmwasm/enclaves/execute clippy

build_all: build-linux build_windows_cli build_macos_cli build_linux_arm64_cli
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

docker_local_azure_hw: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 308):
	docker build --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=NODE -f deployment/dockerfiles/local-node.Dockerfile -t ci-enigma-sgx-node .
	docker build --build-arg SGX_MODE=HW --build-arg SECRET_NODE_TYPE=BOOTSTRAP -f deployment/dockerfiles/local-node.Dockerfile -t ci-enigma-sgx-bootstrap .

docker_node: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 305):
	docker build --build-arg SGX_MODE=${SGX_MODE} --build-arg SECRET_NODE_TYPE=NODE -f deployment/dockerfiles/local-node.Dockerfile -t enigmampc/secret-network-node-${ext}:${DOCKER_TAG} .

build-enclave: vendor
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 316):
	$(MAKE) -C cosmwasm/enclaves/execute enclave

 
# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

proto-swagger-openapi-gen:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 482):
	@./scripts/protoc-swagger-openapi-gen.sh

deb: build-linux deb-no-compile
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

docker_base: docker_base_rust docker_base_go
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

secret-contract-optimizer:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 429):
	sudo docker buildx build --platform=linux/amd64,linux/arm64/v8 -f deployment/dockerfiles/secret-contract-optimizer.Dockerfile -t enigmampc/secret-contract-optimizer:${TAG} --push .

statik:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 444):
	@echo "Installing statik..."
	@go install github.com/rakyll/statik@v0.1.6

prep-go-tests: build-test-contract
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 354):
	# empty BUILD_PROFILE means debug mode which compiles faster
	SGX_MODE=SW $(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so ./x/compute/internal/keeper

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 204):
	-rm -rf /tmp/SecretNetwork
	-rm -f ./secretcli*
	-rm -f ./secretd*
	-find -name '*.so' -delete
	-rm -f ./enigma-blockchain*.deb
	-rm -f ./SHA256SUMS*
	-rm -rf ./third_party/vendor/
	-rm -rf ./.sgx_secrets/*
	-rm -rf ./x/compute/internal/keeper/.sgx_secrets/*
	-rm -rf ./*.der
	-rm -rf ./x/compute/internal/keeper/*.der
	-rm -rf ./cmd/secretd/ias_bin*
 
	$(MAKE) -C go-cosmwasm clean-all
	$(MAKE) -C cosmwasm/enclaves/test clean

bin-data-develop:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 420):
	cd ./cmd/secretd && go-bindata -o ias_bin_dev.go -prefix "../../ias_keys/develop/" -tags "develop,hw" ../../ias_keys/develop/...

build-custom-dev-image:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 229):
	cd go-cosmwasm/api && cp libgo_cosmwasm.so libgo_cosmwasm.so.x
	cd cosmwasm/enclaves/execute && cp librust_cosmwasm_enclave.signed.so librust_cosmwasm_enclave.signed.so.x
	docker build --build-arg SGX_MODE=SW --build-arg SECRET_NODE_TYPE=BOOTSTRAP -f deployment/dockerfiles/custom-node.Dockerfile -t enigmampc/secret-network-sw-dev-custom-bootstrap:${DOCKER_TAG} .
	docker build --build-arg SGX_MODE=SW --build-arg SECRET_NODE_TYPE=NODE -f deployment/dockerfiles/custom-node.Dockerfile -t enigmampc/secret-network-sw-dev-custom-node:${DOCKER_TAG} .
	rm go-cosmwasm/api/libgo_cosmwasm.so.x cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so.x

bin-data: bin-data-sw bin-data-develop bin-data-production
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

enclave-tests:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 379):
	$(MAKE) -C cosmwasm/enclaves/test run

build_linux_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 163):
	$(MAKE) xgo_build_secretcli XGO_TARGET=linux/amd64
	mv secretd-linux-amd64 secretcli-linux-amd64

callback-sanity-test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 341):
	SGX_MODE=SW $(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so .
	SGX_MODE=SW ./cosmwasm/testing/callback-test.sh

# Not a target:
go.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

 
bin-data-production:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 423):
	cd ./cmd/secretd && go-bindata -o ias_bin_prod.go -prefix "../../ias_keys/production/" -tags "production,hw" ../../ias_keys/production/...

_build-linux-with-query: vendor
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 148):
	BUILD_PROFILE=$(BUILD_PROFILE) FEATURES=$(FEATURES) FEATURES_U=query-node,$(FEATURES_U) $(MAKE) -C go-cosmwasm build-rust

build-mainnet-upgrade: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 244):
	@mkdir build 2>&3 || true
	docker build --build-arg BUILD_VERSION=${VERSION} -f deployment/dockerfiles/mainnet-upgrade-release.Dockerfile -t build-release:latest .
	docker build --build-arg BUILD_VERSION=${VERSION} --build-arg SGX_MODE=HW -f deployment/dockerfiles/build-deb-mainnet.Dockerfile -t deb_build .
	docker run -e VERSION=${VERSION} -v $(CUR_DIR)/build:/build deb_build
	docker tag build-release ghcr.io/scrtlabs/secret-network-node:$(VERSION)

docker_base_rocksdb:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 258):
	docker build \
			--build-arg BUILD_VERSION=${VERSION} \
			--build-arg FEATURES=${FEATURES} \
			--build-arg FEATURES_U=${FEATURES_U} \
			--build-arg SGX_MODE=${SGX_MODE} \
			-f deployment/dockerfiles/base-rocksdb.Dockerfile \
			-t rust-go-base-image \
			.

sanity-test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 331):
	SGX_MODE=SW $(MAKE) build-linux
	cp ./cosmwasm/enclaves/execute/librust_cosmwasm_enclave.signed.so .
	SGX_MODE=SW ./cosmwasm/testing/sanity-test.sh

clean-enclave:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 328):
	$(MAKE) -C cosmwasm/enclaves/execute clean

build_macos_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 155):
	$(MAKE) xgo_build_secretcli XGO_TARGET=darwin/amd64
	mv secretd-darwin-* secretcli-macos-amd64

 
docker_base_goleveldb: docker_base
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

vendor:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := vendor
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'Makefile', line 126):
	cargo vendor third_party/vendor --manifest-path third_party/build/Cargo.toml

aesm-image:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 432):
	docker build -f deployment/dockerfiles/aesm.Dockerfile -t enigmampc/aesm .

proto-check-breaking:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build_windows_cli:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 151):
	$(MAKE) xgo_build_secretcli XGO_TARGET=windows/amd64
	mv secretd-windows-* secretcli-windows-amd64.exe

# files hash-table stats:
# Load=67/1024=7%, Rehash=0, Collisions=5/144=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 102 / storage = 1384 B / avg = 13 B
# current buf: size = 8162 B / used = 1384 B / count = 102 / avg = 13 B

# strcache performance: lookups = 223 / hit rate = 54%
# hash-table stats:
 
# Load=102/8192=1%, Rehash=0, Collisions=12/223=5%
# Finished Make data base on Sat Jul 23 14:30:32 2022

 
